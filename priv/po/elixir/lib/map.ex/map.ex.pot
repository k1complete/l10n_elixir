#. TRANSLATORS: def Map.new()
#: lib/map.ex:23 
msgid ""
"Returns a new empty map.\n"
msgstr ""
#. TRANSLATORS: def Map.from_struct(struct)
#: lib/map.ex:60 
msgid ""
"Converts a struct to map.\n"
"\n"
"It accepts the struct module or a struct itself and\n"
"simply removes the `__struct__` field from the struct.\n"
"\n"
"## Example\n"
"\n"
"    defmodule User do\n"
"      defstruct [:name]\n"
"    end\n"
"\n"
"    Map.from_struct(User)\n"
"    #=> %{name: nil}\n"
"\n"
"    Map.from_struct(%User{name: \"john\"})\n"
"    #=> %{name: \"john\"}\n"
"\n"
msgstr ""
#. TRANSLATORS: Elixir.Map Summary
#: lib/map.ex:1 
msgid ""
"A Dict implementation that works on maps.\n"
"\n"
"Maps are key-value stores where keys are compared using\n"
"the match operator (`===`). Maps can be created with\n"
"the `%{}` special form defined in the `Kernel.SpecialForms`\n"
"module.\n"
"\n"
"For more information about the functions in this module and\n"
"their APIs, please consult the `Dict` module.\n"
msgstr ""
