msgid ""
msgstr ""
"Project-Id-Version: l 10n_elixir\n"
"PO-Revision-Date: 2015-05-20 21:53+0900\n"
"Last-Translator: 小田 照敬 <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. TRANSLATORS: Elixir.Bitwise Summary
#: lib/bitwise.ex:1
msgid ""
"This module provides macros and operators for bitwise operators.\n"
"These macros can be used in guards.\n"
"\n"
"The easiest way to use is to simply import them into\n"
"your module:\n"
"\n"
"    iex> use Bitwise\n"
"    iex> bnot 1\n"
"    -2\n"
"    iex> 1 &&& 1\n"
"    1\n"
"\n"
"You can select to include only or skip operators by passing options:\n"
"\n"
"    iex> use Bitwise, only_operators: true\n"
"    iex> 1 &&& 1\n"
"    1\n"
"\n"
msgstr ""
"このモジュールはビット毎演算のためのマクロと演算子を提供します。\n"
"これらのマクロはガードで使うことができます。\n"
"\n"
"使うための最も簡単な方法は、単にあなたのモジュールにインポートすること\n"
"です:\n"
"\n"
"    iex> use Bitwise\n"
"    iex> bnot 1\n"
"    -2\n"
"    iex> 1 &&& 1\n"
"    1\n"
"\n"
"only_operatorsまたはskip_operatorsオプションを渡して演算子を\n"
"含むかスキップするか選択することが出来ます:\n"
"\n"
"    iex> use Bitwise, only_operators: true\n"
"    iex> 1 &&& 1\n"
"    1\n"
"\n"

#. TRANSLATORS: defmacro Bitwise.bxor(left, right)
#: lib/bitwise.ex:90
msgid "Bitwise xor.\n"
msgstr "Bitwise xor.\n"

#. TRANSLATORS: defmacro Bitwise.^^^(left, right)
#: lib/bitwise.ex:97
msgid "Bitwise xor as operator.\n"
msgstr "演算子としてのBitwise xorです。\n"

#. TRANSLATORS: defmacro Bitwise.bor(left, right)
#: lib/bitwise.ex:76
msgid "Bitwise or.\n"
msgstr "Bitwise orです。\n"

#. TRANSLATORS: defmacro Bitwise.|||(left, right)
#: lib/bitwise.ex:83
msgid "Bitwise or as operator.\n"
msgstr "演算子としてのBitwise or です。\n"

#. TRANSLATORS: defmacro Bitwise.bnot(expr)
#: lib/bitwise.ex:48
msgid "Bitwise not.\n"
msgstr "Bitwise notです。\n"

#. TRANSLATORS: defmacro Bitwise.~~~(expr)
#: lib/bitwise.ex:55
msgid "Bitwise not as operator.\n"
msgstr "演算子としてのBitwise notです。\n"

#. TRANSLATORS: defmacro Bitwise.band(left, right)
#: lib/bitwise.ex:62
msgid "Bitwise and.\n"
msgstr "Bitwise andです。\n"

#. TRANSLATORS: defmacro Bitwise.&&&(left, right)
#: lib/bitwise.ex:69
msgid "Bitwise and as operator.\n"
msgstr "演算子としてのBitwise andです。\n"

#. TRANSLATORS: defmacro Bitwise.bsr(left, right)
#: lib/bitwise.ex:118
msgid "Arithmetic bitshift right.\n"
msgstr "算術的右ビットシフトです。\n"

#. TRANSLATORS: defmacro Bitwise.>>>(left, right)
#: lib/bitwise.ex:125
msgid "Arithmetic bitshift right as operator.\n"
msgstr "演算子としての算術的右ビットシフトです。\n"

#. TRANSLATORS: defmacro Bitwise.bsl(left, right)
#: lib/bitwise.ex:104
msgid "Arithmetic bitshift left.\n"
msgstr "算術的左ビットシフトです。\n"

#. TRANSLATORS: defmacro Bitwise.<<<(left, right)
#: lib/bitwise.ex:111
msgid "Arithmetic bitshift left as operator.\n"
msgstr "演算子としての算術的左ビットシフトです。\n"

#. TRANSLATORS: defmacro Bitwise.__using__(options)
#: lib/bitwise.ex:31
msgid ""
"Allows a developer to use this module in their programs with\n"
"the following options:\n"
"\n"
"  * `:only_operators` - include only operators\n"
"  * `:skip_operators` - skip operators\n"
"\n"
msgstr ""
"開発者に、彼らのプログラムで、\n"
"このモジュールに以下のオプションを使うことを許します:\n"
"\n"
"  * `:only_operators` - 演算子のみインクルードします\n"
"  * `:skip_operators` - 演算子をスキップします\n"
"\n"
