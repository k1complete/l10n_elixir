msgid ""
msgstr ""
"Project-Id-Version: l 10n_elixir\n"
"PO-Revision-Date: 2015-12-14 14:33+0900\n"
"Last-Translator: 小田 照敬 <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. TRANSLATORS: def IO.ANSI.green()
#: lib/io/ansi.ex:129
msgid "Sets foreground color to green"
msgstr "前面色を緑にセットします"

#. TRANSLATORS: def IO.ANSI.magenta()
#: lib/io/ansi.ex:129
msgid "Sets foreground color to magenta"
msgstr "前面色をマゼンタにセットします"

#. TRANSLATORS: def IO.ANSI.bright()
#: lib/io/ansi.ex:76
msgid "Bright (increased intensity) or Bold"
msgstr "高輝度/太文字に設定"

#. TRANSLATORS: def IO.ANSI.format_fragment(chardata, emit \\ enabled?)
#: lib/io/ansi.ex:193
msgid ""
"Formats a chardata-like argument by converting named ANSI sequences into "
"actual\n"
"ANSI codes.\n"
"\n"
"The named sequences are represented by atoms.\n"
"\n"
"An optional boolean parameter can be passed to enable or disable\n"
"emitting actual ANSI codes. When `false`, no ANSI codes will emitted.\n"
"By default checks if ANSI is enabled using the `enabled?/0` function.\n"
"\n"
"## Examples\n"
"\n"
"    iex> IO.ANSI.format_fragment([:bright, 'Word'], true)\n"
"    [[[[[[] | \"\\e[1m\"], 87], 111], 114], 100]\n"
"\n"
msgstr ""
"名前付けられたANSIシーケンスを、実際のANSIコードへ変関することによって、\n"
"文字データライクの引数をフォーマットします。\n"
"\n"
"名前付けられたシーケンスはアトムにより表現されます。\n"
"\n"
"実際のANSIコードを発行することを使用可能または使用不可にするために、\n"
"オプションのブーリアンパラメタを渡すこともできます。\n"
"`false`の時、ANSIコードは発行されません。\n"
"デフォルトでは、ANSIが使用可能かどうか`enabled?/0`関数でチェックします。\n"
"\n"
"## 例\n"
"\n"
"    iex> IO.ANSI.format_fragment([:bright, 'Word'], true)\n"
"    [[[[[[] | \"\\e[1m\"], 87], 111], 114], 100]\n"
"\n"

#. TRANSLATORS: def IO.ANSI.default_background()
#: lib/io/ansi.ex:139
msgid "Default background color"
msgstr "背景色をデフォルトに戻す"

#. TRANSLATORS: def IO.ANSI.not_framed_encircled()
#: lib/io/ansi.ex:151
msgid "Not framed or encircled"
msgstr "四角囲みまたは丸囲みを解除"

#. TRANSLATORS: def IO.ANSI.blink_off()
#: lib/io/ansi.ex:123
msgid "Blink: off"
msgstr "ブリンク: off"

#. TRANSLATORS: def IO.ANSI.cyan()
#: lib/io/ansi.ex:129
msgid "Sets foreground color to cyan"
msgstr "前面色をシアンにセットします"

#. TRANSLATORS: def IO.ANSI.yellow()
#: lib/io/ansi.ex:129
msgid "Sets foreground color to yellow"
msgstr "前面色を黄色にセットします。"

#. TRANSLATORS: def IO.ANSI.clear()
#: lib/io/ansi.ex:160
msgid "Clears screen"
msgstr "全画面消去"

#. TRANSLATORS: def IO.ANSI.black_background()
#: lib/io/ansi.ex:132
msgid "Sets background color to black"
msgstr "背景色を黒にセットします"

#. TRANSLATORS: def IO.ANSI.font_4()
#: lib/io/ansi.ex:110
msgid "Sets alternative font 4"
msgstr "選択肢フォント4にセットします。"

#. TRANSLATORS: def IO.ANSI.format(chardata, emit \\ enabled?)
#: lib/io/ansi.ex:170
msgid ""
"Formats a chardata-like argument by converting named ANSI sequences into "
"actual\n"
"ANSI codes.\n"
"\n"
"The named sequences are represented by atoms.\n"
"\n"
"It will also append an `IO.ANSI.reset/0` to the chardata when a conversion "
"is\n"
"performed. If you don't want this behaviour, use `format_fragment/2`.\n"
"\n"
"An optional boolean parameter can be passed to enable or disable\n"
"emitting actual ANSI codes. When `false`, no ANSI codes will emitted.\n"
"By default checks if ANSI is enabled using the `enabled?/0` function.\n"
"\n"
"## Examples\n"
"\n"
"    iex> IO.ANSI.format([\"Hello, \", :red, :bright, \"world!\"], true)\n"
"    [[[[[[], \"Hello, \"] | \"\\e[31m\"] | \"\\e[1m\"], \"world!\"] | "
"\"\\e[0m\"]\n"
"\n"
msgstr ""
"名前付けられたANSIシーケンスを、実際のANSIコードへ変関することによって、\n"
"文字データライクの引数をフォーマットします。\n"
"\n"
"名前付けられたシーケンスはアトムにより表現されます。\n"
"\n"
"変換が実行されたときに、文字データに`IO.ANSI.reset/0`を追加することもありま"
"す。\n"
"もしこの振舞いを望まないなら、`format_fragment/2`を使ってください。\n"
"\n"
"実際のANSIコードを発行することを使用可能または使用不可にするために、\n"
"オプションのブーリアンパラメタを渡すこともできます。\n"
"`false`の時、ANSIコードは発行されません。\n"
"デフォルトでは、ANSIが使用可能かどうか`enabled?/0`関数でチェックします。\n"
"\n"
"## 例\n"
"\n"
"    iex> IO.ANSI.format([\"Hello, \", :red, :bright, \"world!\"], true)\n"
"    [[[[[[], \"Hello, \"] | \"\\e[31m\"] | \"\\e[1m\"], \"world!\"] | "
"\"\\e[0m\"]\n"
"\n"

#. TRANSLATORS: def IO.ANSI.conceal()
#: lib/io/ansi.ex:100
msgid "Conceal. Not widely supported"
msgstr "文字色と背景色を同じにします。広くはサポートされていません"

#. TRANSLATORS: def IO.ANSI.underline()
#: lib/io/ansi.ex:85
msgid "Underline: Single"
msgstr "下線: 一重"

#. TRANSLATORS: def IO.ANSI.not_overlined()
#: lib/io/ansi.ex:154
msgid "Not overlined"
msgstr "上線を解除"

#. TRANSLATORS: def IO.ANSI.font_6()
#: lib/io/ansi.ex:110
msgid "Sets alternative font 6"
msgstr "選択肢フォント6にセットします。"

#. TRANSLATORS: def IO.ANSI.crossed_out()
#: lib/io/ansi.ex:103
msgid ""
"Crossed-out. Characters legible, but marked for deletion. Not widely "
"supported"
msgstr ""
"打消し線。文字は判読可能だが、削除として指定する。広くはサポートされていな"
"い。"

#. TRANSLATORS: def IO.ANSI.green_background()
#: lib/io/ansi.ex:132
msgid "Sets background color to green"
msgstr "背景色を緑にセットします"

#. TRANSLATORS: def IO.ANSI.framed()
#: lib/io/ansi.ex:142
msgid "Framed"
msgstr "フレーム化"

#. TRANSLATORS: def IO.ANSI.cyan_background()
#: lib/io/ansi.ex:132
msgid "Sets background color to cyan"
msgstr "背景色をシアンにセットします"

#. TRANSLATORS: def IO.ANSI.primary_font()
#: lib/io/ansi.ex:106
msgid "Sets primary (default) font"
msgstr "プライマリ(default)フォントをセットします。"

#. TRANSLATORS: def IO.ANSI.reset()
#: lib/io/ansi.ex:73
msgid "Resets all attributes"
msgstr "全ての属性をリセットします"

#. TRANSLATORS: def IO.ANSI.red()
#: lib/io/ansi.ex:129
msgid "Sets foreground color to red"
msgstr "前面色を赤にセットします"

#. TRANSLATORS: def IO.ANSI.color(code)
#: lib/io/ansi.ex:45
msgid "Sets foreground color"
msgstr "前面色をセットします"

#. TRANSLATORS: def IO.ANSI.blue()
#: lib/io/ansi.ex:129
msgid "Sets foreground color to blue"
msgstr "前面色を青にセットします"

#. TRANSLATORS: def IO.ANSI.normal()
#: lib/io/ansi.ex:114
msgid "Normal color or intensity"
msgstr "太文字と低輝度を解除"

#. TRANSLATORS: def IO.ANSI.blink_slow()
#: lib/io/ansi.ex:88
msgid "Blink: Slow. Less than 150 per minute"
msgstr "ブリンク: Slow. 150回/分未満"

#. TRANSLATORS: def IO.ANSI.white()
#: lib/io/ansi.ex:129
msgid "Sets foreground color to white"
msgstr "前面色を白にセットします"

#. TRANSLATORS: Elixir.IO.ANSI Summary
#: lib/io/ansi.ex:18
msgid ""
"Functionality to render ANSI escape sequences.\n"
"\n"
"[ANSI escape sequences](https://en.wikipedia.org/wiki/ANSI_escape_code)\n"
"are characters embedded in text used to control formatting, color, and\n"
"other output options on video text terminals.\n"
msgstr ""
"ANSIエスケープシーケンスをレンダリングする関数です。\n"
"\n"
"[ANSIエスケープシーケンス](https://en.wikipedia.org/wiki/ANSI_escape_code)\n"
"とはビデオ・テキスト端末に、フォーマット、色、その他出力オプションを\n"
"制御するためにテキストに埋め込まれる文字です。\n"

#. TRANSLATORS: def IO.ANSI.font_1()
#: lib/io/ansi.ex:110
msgid "Sets alternative font 1"
msgstr "選択肢フォント1にセットします。"

#. TRANSLATORS: def IO.ANSI.reverse()
#: lib/io/ansi.ex:97
msgid "Image: Negative. Swap foreground and background"
msgstr "イメージ: 反転。前景色と背景色を入れ替えます"

#. TRANSLATORS: def IO.ANSI.color_background(code)
#: lib/io/ansi.ex:59
msgid "Sets background color"
msgstr "背景色をセットします"

#. TRANSLATORS: def IO.ANSI.clear_line()
#: lib/io/ansi.ex:163
msgid "Clears line"
msgstr "行消去"

#. TRANSLATORS: def IO.ANSI.not_italic()
#: lib/io/ansi.ex:117
msgid "Not italic"
msgstr "イタリックを解除"

#. TRANSLATORS: def IO.ANSI.font_7()
#: lib/io/ansi.ex:110
msgid "Sets alternative font 7"
msgstr "選択肢フォント7にセットします。"

#. TRANSLATORS: def IO.ANSI.font_8()
#: lib/io/ansi.ex:110
msgid "Sets alternative font 8"
msgstr "選択肢フォント8にセットします。"

#. TRANSLATORS: def IO.ANSI.font_2()
#: lib/io/ansi.ex:110
msgid "Sets alternative font 2"
msgstr "選択肢フォント2にセットします。"

#. TRANSLATORS: def IO.ANSI.black()
#: lib/io/ansi.ex:129
msgid "Sets foreground color to black"
msgstr "前面色を黒にセットします"

#. TRANSLATORS: def IO.ANSI.blue_background()
#: lib/io/ansi.ex:132
msgid "Sets background color to blue"
msgstr "背景色を青にセットします"

#. TRANSLATORS: def IO.ANSI.blink_rapid()
#: lib/io/ansi.ex:91
msgid ""
"Blink: Rapid. MS-DOS ANSI.SYS; 150 per minute or more; not widely supported"
msgstr ""
"Blink: Rapid. MS-DOS ANSI.SYS; 150回/分以上; 広くはサポートされていません"

#. TRANSLATORS: def IO.ANSI.red_background()
#: lib/io/ansi.ex:132
msgid "Sets background color to red"
msgstr "背景色を赤にセットします"

#. TRANSLATORS: def IO.ANSI.font_3()
#: lib/io/ansi.ex:110
msgid "Sets alternative font 3"
msgstr "選択肢フォント3にセットします。"

#. TRANSLATORS: def IO.ANSI.color(r, g, b)
#: lib/io/ansi.ex:49
msgid ""
"Sets the foreground color from individual RGB values.\n"
"\n"
"Valid values for each color are in the range 0 to 5.\n"
msgstr ""
"独立したRGB値から前面色をセットします。\n"
"\n"
"それぞれの色の有効な値は、0から5の範囲です。\n"

#. TRANSLATORS: def IO.ANSI.default_color()
#: lib/io/ansi.ex:136
msgid "Default text color"
msgstr "テキスト色をデフォルトに戻す"

#. TRANSLATORS: def IO.ANSI.color_background(r, g, b)
#: lib/io/ansi.ex:63
msgid ""
"Sets the background color from individual RGB values.\n"
"\n"
"Valid values for each color are in the range 0 to 5.\n"
msgstr ""
"独立したRGB値から背景色をセットします。\n"
"\n"
"それぞれの色の有効な値は、0から5の範囲です。\n"

#. TRANSLATORS: def IO.ANSI.italic()
#: lib/io/ansi.ex:82
msgid "Italic: on. Not widely supported. Sometimes treated as inverse"
msgstr "イタリック: on。広くはサポートされていません。時々反転と見做されます。"

#. TRANSLATORS: def IO.ANSI.encircled()
#: lib/io/ansi.ex:145
msgid "Encircled"
msgstr "丸で囲みます"

#. TRANSLATORS: def IO.ANSI.magenta_background()
#: lib/io/ansi.ex:132
msgid "Sets background color to magenta"
msgstr "背景色をマゼンタにセットします"

#. TRANSLATORS: def IO.ANSI.white_background()
#: lib/io/ansi.ex:132
msgid "Sets background color to white"
msgstr "背景色を白にセットします"

#. TRANSLATORS: def IO.ANSI.faint()
#: lib/io/ansi.ex:79
msgid "Faint (decreased intensity), not widely supported"
msgstr "Faint(かすかな)(低輝度)、広くはサポートされていません"

#. TRANSLATORS: def IO.ANSI.font_5()
#: lib/io/ansi.ex:110
msgid "Sets alternative font 5"
msgstr "選択肢フォント5にセットします。"

#. TRANSLATORS: def IO.ANSI.yellow_background()
#: lib/io/ansi.ex:132
msgid "Sets background color to yellow"
msgstr "背景色を黄色にセットします"

#. TRANSLATORS: def IO.ANSI.home()
#: lib/io/ansi.ex:157
msgid "Sends cursor home"
msgstr "カーソルをホームへセットします。"

#. TRANSLATORS: def IO.ANSI.font_9()
#: lib/io/ansi.ex:110
msgid "Sets alternative font 9"
msgstr "選択肢フォント9にセットします。"

#. TRANSLATORS: def IO.ANSI.no_underline()
#: lib/io/ansi.ex:120
msgid "Underline: None"
msgstr "下線: なし"

#. TRANSLATORS: def IO.ANSI.enabled?()
#: lib/io/ansi.ex:32
msgid ""
"Checks if ANSI coloring is supported and enabled on this machine.\n"
"\n"
"This function simply reads the configuration value for\n"
"`:ansi_enabled` in the `:elixir` application. The value is by\n"
"default `false` unless Elixir can detect during startup that\n"
"both `stdout` and `stderr` are terminals.\n"
msgstr ""
"ANSIカラーがサポートされて、この計算機で有効かどうかをチェックします。\n"
"\n"
"この関数は、単に`:elixir`アプリケーションの`:ansi_enabled`の構成値を読\n"
"むだけです。Elixirがスタートアップの間に、`stdout`と`stderr`の両方が端\n"
"末(terminal)と検出できない限り、その値はデフォルトで`false`です。\n"

#. TRANSLATORS: def IO.ANSI.overlined()
#: lib/io/ansi.ex:148
msgid "Overlined"
msgstr "上線を設定"
