msgid ""
msgstr ""
"Project-Id-Version: l 10n_elixir\n"
"PO-Revision-Date: 2015-05-20 21:55+0900\n"
"Last-Translator: 小田 照敬 <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. TRANSLATORS: def Tuple.delete_at(tuple, index)
#: lib/tuple.ex:63
msgid ""
"Removes an element from a tuple.\n"
"\n"
"Deletes the element at the zero-based `index` from `tuple`.\n"
"Raises an `ArgumentError` if `index` is greater than\n"
"or equal to the length of `tuple`.\n"
"\n"
"Inlined by the compiler.\n"
"\n"
"## Examples\n"
"\n"
"    iex> tuple = {:foo, :bar, :baz}\n"
"    iex> Tuple.delete_at(tuple, 0)\n"
"    {:bar, :baz}\n"
"\n"
msgstr ""
"タプルから要素を削除します。\n"
"\n"
"`tuple`から0始まりの`index`で要素を削除します。\n"
"もし`index`が`tuple`の長さと同じか大きかったら、\n"
"`ArgumentError`を上げます。\n"
"\n"
"コンパイラによりインライン化されます。\n"
"\n"
"## 例\n"
"\n"
"    iex> tuple = {:foo, :bar, :baz}\n"
"    iex> Tuple.delete_at(tuple, 0)\n"
"    {:bar, :baz}\n"
"\n"

#. TRANSLATORS: def Tuple.insert_at(tuple, index, term)
#: lib/tuple.ex:42
msgid ""
"Inserts an element into a tuple.\n"
"\n"
"Inserts `value` into `tuple` at the given zero-based `index`.\n"
"Raises an `ArgumentError` if `index` is greater than the\n"
"length of `tuple`.\n"
"\n"
"Inlined by the compiler.\n"
"\n"
"## Examples\n"
"\n"
"    iex> tuple = {:bar, :baz}\n"
"    iex> Tuple.insert_at(tuple, 0, :foo)\n"
"    {:foo, :bar, :baz}\n"
"\n"
msgstr ""
"タプルに要素を挿入します。\n"
"\n"
"与えられた0始まりの`index`の位置へ`value`を`tuple`に挿入します。\n"
"もし`index`が`tuple`の長さより大きいなら、`ArgumentError`を上げます。\n"
"\n"
"コンパイラによりインライン化されます。\n"
"\n"
"## 例\n"
"\n"
"    iex> tuple = {:bar, :baz}\n"
"    iex> Tuple.insert_at(tuple, 0, :foo)\n"
"    {:foo, :bar, :baz}\n"
"\n"

#. TRANSLATORS: Elixir.Tuple Summary
#: lib/tuple.ex:1
msgid "Functions for working with tuples.\n"
msgstr "タプルで動く関数です。\n"

#. TRANSLATORS: def Tuple.duplicate(data, size)
#: lib/tuple.ex:21
msgid ""
"Creates a new tuple.\n"
"\n"
"Creates a tuple of size `size` containing the\n"
"given `data` at every position.\n"
"\n"
"Inlined by the compiler.\n"
"\n"
"## Examples\n"
"\n"
"    iex> Tuple.duplicate(:hello, 3)\n"
"    {:hello, :hello, :hello}\n"
"\n"
msgstr ""
"新しいタプルを作成します。\n"
"\n"
"全ての位置に与えられた`data`を含む、\n"
"`size`サイズのタプルを作成します。\n"
"\n"
"コンパイラによりインライン化されます。\n"
"\n"
"## 例\n"
"\n"
"    iex> Tuple.duplicate(:hello, 3)\n"
"    {:hello, :hello, :hello}\n"
"\n"

#. TRANSLATORS: def Tuple.to_list(tuple)
#: lib/tuple.ex:73
msgid ""
"Converts a tuple to a list.\n"
"\n"
"Inlined by the compiler.\n"
msgstr ""
"タプルをリストに変換します。\n"
"\n"
"コンパイラによりインライン化されます。\n"
