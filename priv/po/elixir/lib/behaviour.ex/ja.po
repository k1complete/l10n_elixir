msgid ""
msgstr ""
"Project-Id-Version: l 10n_elixir\n"
"PO-Revision-Date: 2015-05-20 21:53+0900\n"
"Last-Translator: 小田 照敬 <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. TRANSLATORS: Elixir.Behaviour Summary
#: lib/behaviour.ex:1
msgid ""
"Utilities for defining behaviour interfaces.\n"
"\n"
"Behaviours can be referenced by other modules\n"
"to ensure they implement required callbacks.\n"
"\n"
"For example, you can specify the `URI.Parser`\n"
"behaviour as follows:\n"
"\n"
"    defmodule URI.Parser do\n"
"      use Behaviour\n"
"\n"
"      @doc \"Parses the given URL\"\n"
"      defcallback parse(uri_info :: URI.t) :: URI.t\n"
"\n"
"      @doc \"Defines a default port\"\n"
"      defcallback default_port() :: integer\n"
"    end\n"
"\n"
"And then a module may use it as:\n"
"\n"
"    defmodule URI.HTTP do\n"
"      @behaviour URI.Parser\n"
"      def default_port(), do: 80\n"
"      def parse(info), do: info\n"
"    end\n"
"\n"
"If the behaviour changes or `URI.HTTP` does\n"
"not implement one of the callbacks, a warning\n"
"will be raised.\n"
"\n"
"## Implementation\n"
"\n"
"Since Erlang R15, behaviours must be defined via\n"
"`@callback` attributes. `defcallback` is a simple\n"
"mechanism that defines the `@callback` attribute\n"
"according to the given type specification. `defcallback` allows\n"
"documentation to be created for the callback and defines\n"
"a custom function signature.\n"
"\n"
"The callbacks and their documentation can be retrieved\n"
"via the `__behaviour__` callback function.\n"
msgstr ""
"ビヘイビアインタフェース定義のユーティリティです。\n"
"\n"
"ビヘイビアは必須のコールバックの実装を確実とするために\n"
"他のモジュールにより参照されることができます。\n"
"\n"
"たとえば、`URI.Parser`を以下のとおりにビヘイビアを\n"
"指定することができます:\n"
"\n"
"    defmodule URI.Parser do\n"
"      use Behaviour\n"
"\n"
"      @doc \"Parses the given URL\"\n"
"      defcallback parse(uri_info :: URI.t) :: URI.t\n"
"\n"
"      @doc \"Defines a default port\"\n"
"      defcallback default_port() :: integer\n"
"    end\n"
"\n"
"そしてモジュールはそれを使うかももしれません:\n"
"\n"
"    defmodule URI.HTTP do\n"
"      @behaviour URI.Parser\n"
"      def default_port(), do: 80\n"
"      def parse(info), do: info\n"
"    end\n"
"\n"
"もしビヘイビアが変わるか、`URI.HTTP`がコールバックの\n"
"一つを実装していないなら、警告が引き起されるでしょう。\n"
"\n"
"## 実装\n"
"\n"
"Erlang R15から、ビヘイビアは`@callback`アトリビュートによって定義されな\n"
"ければなりません。`defcallback`は所定のタイプ仕様にしたがって\n"
"`@callback`アトリビュートを定義するシンプルなメカニズムです。\n"
"`defcallback`はコールバックのためのドキュメンテーションを作成することを\n"
"許して、カスタムの関数シグネチャを定義します。\n"
"\n"
"コールバックとそのドキュメンテーションは`__behaviour__`コールバック関数\n"
"によって検索されることが出来ます。\n"

#. TRANSLATORS: defmacro Behaviour.defmacrocallback(spec)
#: lib/behaviour.ex:56
msgid "Defines a macro callback according to the given type specification.\n"
msgstr "与えられたタイプ仕様に従って、コールバックマクロを定義します。\n"

#. TRANSLATORS: defmacro Behaviour.defcallback(spec)
#: lib/behaviour.ex:49
msgid ""
"Defines a function callback according to the given type specification.\n"
msgstr "与えられたタイプ仕様に従って、コールバック関数を定義します。\n"
