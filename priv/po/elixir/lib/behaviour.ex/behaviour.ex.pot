#. TRANSLATORS: defmacro Behaviour.defcallback(spec)
#: lib/behaviour.ex:13 
msgid ""
"Defines a function callback according to the given type specification.\n"
msgstr ""
#. TRANSLATORS: defmacro Behaviour.defmacrocallback(spec)
#: lib/behaviour.ex:20 
msgid ""
"Defines a macro callback according to the given type specification.\n"
msgstr ""
#. TRANSLATORS: Elixir.Behaviour Summary
#: lib/behaviour.ex:2 
msgid ""
"This module has been deprecated.\n"
"\n"
"Instead of `defcallback`, one can simply use `@callback`.\n"
"Instead of `defmacrocallback`, one can simply use `@macrocallback`.\n"
"Instead of `__behaviour__(:callbacks)`, one can simply use `behaviour_info(:callbacks)`.\n"
msgstr ""
