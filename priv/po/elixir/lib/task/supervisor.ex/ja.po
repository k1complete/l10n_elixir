msgid ""
msgstr ""
"Project-Id-Version: l 10n_elixir\n"
"PO-Revision-Date: 2015-05-20 21:55+0900\n"
"Last-Translator: 小田 照敬 <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. TRANSLATORS: def Task.Supervisor.terminate_child(supervisor, pid)
#: lib/task/supervisor.ex:78
msgid "Terminates the child with the given `pid`.\n"
msgstr "与えられた`pid`の子プロセスを終了します。\n"

#. TRANSLATORS: def Task.Supervisor.async(supervisor, module, fun, args)
#: lib/task/supervisor.ex:66
msgid ""
"Starts a task that can be awaited on.\n"
"\n"
"The `supervisor` must be a reference as defined in `Task.Supervisor`.\n"
"For more information on tasks, check the `Task` module.\n"
msgstr ""
"待機することができるタスクを開始します。\n"
"\n"
"`supervisor`は、`Task.Supervisor`で定義されたリファレンスでなければなり\n"
"ません。タスクについての詳細は、`Task`モジュールをチェックしてください。\n"

#. TRANSLATORS: def Task.Supervisor.start_child(supervisor, module, fun, args)
#: lib/task/supervisor.ex:110
msgid ""
"Starts a task as child of the given `supervisor`.\n"
"\n"
"Similar to `start_child/2` except the task is specified\n"
"by the given `module`, `fun` and `args`.\n"
msgstr ""
"与えられた`supervisor`の子としてタスクを開始します。\n"
"\n"
"`start_child/2`と似ていますが、タスクは`module`、`fun`と`args`によって\n"
"指定されなければなりません。\n"

#. TRANSLATORS: def Task.Supervisor.start_child(supervisor, fun)
#: lib/task/supervisor.ex:99
msgid ""
"Starts a task as child of the given `supervisor`.\n"
"\n"
"Note that the spawned process is not linked to the caller, but\n"
"only to the supervisor. This command is useful in case the\n"
"task needs to perform side-effects (like I/O) and does not need\n"
"to report back to the caller.\n"
msgstr ""
"与えられた`supervisor`の子としてタスクを開始します。\n"
"\n"
"生成されたプロセスは呼び出し側にリンクされていなく、スーパバイザにのみ\n"
"にリンクされていることに注意してください。このコマンドはタスクが副作用\n"
"(IOのような)を実行する必要があって、呼び出し側に報告を返す必要はない場\n"
"合に役に立ちます。\n"

#. TRANSLATORS: def Task.Supervisor.start_link(opts \\ [])
#: lib/task/supervisor.ex:40
msgid ""
"Starts a new supervisor.\n"
"\n"
"The supported options are:\n"
"\n"
"* `:name` - used to register a supervisor name, the supported values are\n"
"  described under the `Name Registration` section in the `GenServer` module\n"
"  docs;\n"
"\n"
"* `:restart` - the restart strategy, may be `:temporary` (the default),\n"
"  `:transient` or `:permanent`. Check `Supervisor.Spec` for more info.\n"
"  Defaults to temporary as most tasks can't be effectively restarted after\n"
"  a crash;\n"
"\n"
"* `:shutdown` - `:brutal_kill` if the tasks must be killed directly on "
"shutdown\n"
"  or an integer indicating the timeout value, defaults to 5000 "
"milliseconds;\n"
"\n"
"* `:max_restarts` and `:max_seconds` - as specified in `Supervisor.Spec."
"supervise/2`;\n"
"\n"
msgstr ""
"新しいスーパバイザを開始します。\n"
"\n"
"サポートされているオプションは以下の通りです:\n"
"\n"
"* `:name` - スーパバイザ名を登録するために使います。\n"
"`GenServer`モジュールドキュメントの`Name Registration`セクションに\n"
"記述されている値がサポートされています;\n"
"\n"
"* `:restart` - リスタート戦略で、`:temporary`(デフォルト)、\n"
"  `:transient`か`:permanent`。 詳細は`Supervisor.Spec`を参照してく\n"
"   ださい。、殆どのタスクは、クラッシュ後、事実上リスタートできない\n"
"   ため、temporaryがデフォルトです;\n"
"\n"
"* `:shutdown` - shutdownもしくは、`:brutal_kill`で指定されたタイムアウト値\n"
"(デフォルト5000ミリ秒)で、タスクが直接殺されなければならないならば、\n"
"指定します;\n"
"\n"
"* `:max_restarts` と `:max_seconds` - `Supervisor.Spec.supervise/2`で\n"
"指定されます;\n"

#. TRANSLATORS: def Task.Supervisor.children(supervisor)
#: lib/task/supervisor.ex:86
msgid "Returns all children pids.\n"
msgstr "全ての子プロセスのpidを返します。\n"

#. TRANSLATORS: Elixir.Task.Supervisor Summary
#: lib/task/supervisor.ex:1
msgid ""
"A tasks supervisor.\n"
"\n"
"This module defines a supervisor which can be used to dynamically\n"
"supervise tasks. Behind the scenes, this module is implemented as a\n"
"`:simple_one_for_one` supervisor where the workers are temporary\n"
"(i.e. they are not restarted after they die).\n"
"\n"
"The functions in this module allow tasks to be spawned and awaited\n"
"from a supervisor, similar to the functions defined in the `Task` module.\n"
"\n"
"## Name Registration\n"
"\n"
"A `Task.Supervisor` is bound to the same name registration rules as a\n"
"`GenServer`. Read more about it in the `GenServer` docs.\n"
msgstr ""
"タスクスーパバイザです。\n"
"\n"
"このモジュールは、動的にタスクをスーパバイズする\n"
"ために使うことができる、スーパバイザを定義します。\n"
"\n"
"舞台裏では、このモジュールは、ワーカがtemporaryの\n"
"`:simple_one_for_one`スーパバイザとして実装されます(即ち、ワーカが死ん\n"
"でも再起動されません)。\n"
"\n"
"`Task`モジュールで定義された関数と似て、\n"
"このモジュールの関数はスーパバイザからタスクを生成し、待つことを\n"
"許します。\n"
"\n"
"## 名前の登録\n"
"\n"
"`Task.Supervisor`は`GenServer`と同じ名前登録規則に従います。\n"
"それについてはの詳細は、`GenServer`のドキュメントを参照してください。\n"
