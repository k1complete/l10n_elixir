msgid ""
msgstr ""
"Project-Id-Version: l 10n_elixir\n"
"PO-Revision-Date: 2015-05-20 21:53+0900\n"
"Last-Translator: 小田 照敬 <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. TRANSLATORS: Elixir.Access Summary
#: lib/access.ex:1
msgid ""
"The Access protocol is used by `foo[bar]` and also\n"
"empowers the nested update functions in Kernel.\n"
"\n"
"For instance, `foo[bar]` translates `Access.get(foo, bar)`.\n"
"`Kernel.get_in/2`, `Kernel.put_in/3`, `Kernel.update_in/3` and\n"
"`Kernel.get_and_update_in/3` are also all powered by the Access\n"
"protocol.\n"
"\n"
"This protocol is implemented by default for keywords, maps\n"
"and dictionary like types:\n"
"\n"
"    iex> keywords = [a: 1, b: 2]\n"
"    iex> keywords[:a]\n"
"    1\n"
"\n"
"    iex> map = %{a: 1, b: 2}\n"
"    iex> map[:a]\n"
"    1\n"
"\n"
"    iex> star_ratings = %{1.0 => \"★\", 1.5 => \"★☆\", 2.0 => \"★★\"}\n"
"    iex> star_ratings[1.5]\n"
"    \"★☆\"\n"
"\n"
"The key comparison must be implemented using the `===` operator.\n"
msgstr ""
"Accessプロトコルは`foo[bar]`によって使われ、Kernelのネストした更新関数\n"
"に能力を与えます。\n"
"\n"
"例えば、`foo[bar]`は、`Access.get(foo, bar)`に変換されます。\n"
"`Kernel.get_in/2`、`Kernel.put_in/3`、`Kernel.update_in/3`、\n"
"そして`Kernel.get_and_update_in/3`は全てAccessプロトコル\n"
"で動いています。\n"
"\n"
"このプロトコルはキーワード、マップ、そしてディクショナリのような\n"
"タイプではデフォルトで実装されています:\n"
"\n"
"    iex> keywords = [a: 1, b: 2]\n"
"    iex> keywords[:a]\n"
"    1\n"
"\n"
"    iex> map = %{a: 1, b: 2}\n"
"    iex> map[:a]\n"
"    1\n"
"\n"
"    iex> star_ratings = %{1.0 => \"★\", 1.5 => \"★☆\", 2.0 => \"★★\"}\n"
"    iex> star_ratings[1.5]\n"
"    \"★☆\"\n"
"\n"
"キーの比較は`===`演算子を使って実装されなければなりません。\n"

#. TRANSLATORS: def Access.get_and_update(container, key, fun)
#: lib/access.ex:44
msgid ""
"Gets a value and updates the given `key` in one pass.\n"
"\n"
"The function must receive the value for the given `key`\n"
"(or `nil` if the key doesn't exist in `container`) and\n"
"the function must return a tuple containing the `get`\n"
"value and the new value to be stored in the `container`.\n"
msgstr ""
"一度のパスで、与えられた`key`の値を取得し、更新します。\n"
"\n"
"関数は、与えられた`key`の値(または、もし`container`にキーが存在しないな\n"
"ら、`nil`)を受け取らなければならず、関数は`get`した値と、`container`に\n"
"保存された新しい値を含むタプルを返さなくてはなりません。\n"

#. TRANSLATORS: def container[key]
#: lib/access.ex:33
msgid "Accesses the given key in the container.\n"
msgstr "コンテナに与えられたキーでアクセスします。\n"
